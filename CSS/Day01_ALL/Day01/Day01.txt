CSS 
1、CSS概述
	1、问题
		1、设置整个页面中的文字颜色为红色
			<body text="red">
		2、设置页面中所有的div元素的文本颜色为蓝色
		3、更改页面中所有的div元素的文本颜色为粉色

		html的弊端：
			1、相同的样式设置，使用的是不同的属性来完成的
				<body text="red">
				<font color="blue">
			2、相同的操作，要重复的写
				<div>
					<font color="pink">春眠不觉晓</font>
				</div>

				<div>
					<font color="pink">夜来风雨声</font>
				</div>

				可重用性 和 可维护性 较低
	2、什么是CSS
		Cascading Style Sheets
		层叠样式表 -> 样式表

		作用：设置HTML网页元素的样子

		CSS 与 HTML 之间的关系：
			HTML : 构建网页的结构
			CSS : 构建网页元素的样式

		HTML 与 CSS 之间的使用原则：
			W3C建议尽量使用CSS来取代HTML属性
2、CSS的语法规范
	1、使用CSS样式表的方式
		1、内联方式
			又称为 "行内样式","内联样式"
			特点：将CSS内容定义在HTML标记中
			语法：
				<ANY style="样式声明1;样式声明2;... ...">
				样式声明：
					1、由样式属性名 以及 值来组成
					2、属性名 与 值 之间使用 : 做连接
					3、多个样式声明之间用 ; 做分隔
			常用的样式属性 和 值：
			1、设置文本颜色的属性和值
				属性：color
				值：合法的颜色值(英文)
				ex:   color:red
			2、设置背景颜色的属性和值
				属性：background
				值：合法的颜色值(英文)
			3、设置文字大小的属性和值
				属性：font-size
				值：以 px 或 pt 为单位的数值
				ex:   font-size:16px
			练习：(5分钟)
				1、创建一个页面 02-css-basic.html
				2、创建一个div标记，内容随意
				3、设置该标记内的内容样式如下(内联方式)
					1、文本颜色(color) ：黄色(yellow)
					2、背景颜色(background) ：红色(red)
					3、文字大小(font-size) ：16px
		2、内部样式表
			在网页中的一个独立的地方声明该网页要用到的所有的样式
			语法：
				<head>
					<style>

						/* 注释 */
						
						样式规则1
						样式规则2
						...
						样式规则n
					</style>
				</head>

				样式规则 ：由 选择器 和 样式声明 组成
				选择器：规范了页面中哪些元素能够使用声明好的样式,其实就是为了匹配页面中的元素
				样式规则 ：
					选择器{样式声明1;样式声明2;}

					选择器{
						样式声明1;
						样式声明2;
					}
						
					div{
						color:red;
						background:yellow;
						font-size:16px;
					}
					p{
						... ...
					}
				练习：
					在 02-css-basic.html 中
					1、创建若干 p 标记，内容随意
					2、创建若干 h3标记，内容随意
					3、使用内部样式表完成下列操作
						1、页面中所有的p标记
							文本颜色 ：蓝色(blue)
							文本大小 ：23px
						2、页面中所有的 h3 标记
							文本颜色 ：灰色(silver)
							背景颜色 ：橙色(orange)
		3、外部样式表
			独立于任何网页的位置处，声明一个样式表文件(***.css)，在文件中声明样式。在使用的网页中进行引入
			使用步骤：
				1、创建样式表文件，并编写样式
					在 xxx.css 文件中编写样式规则
				2、在网页上对样式表文件进行引入
					<head>
						<link rel="stylesheet" href="xxx.css">
					</head>

	2、CSS样式表特征
		1、继承性
			必须是父子(有层级关系)结构
			大部分的css效果是可以直接继承给子元素的

		2、层叠性
			可以为一个元素定义多个样式规则，规则中的属性不冲突时，可以同时都应用到当前元素上
			div{
				color:red;
			}

			div{
				background:yellow;
			}

			div{
				font-size:26px;
			}
		3、优先级
			在层叠性基础上，如果样式声明冲突(重复)的话,则按照默认的优先级去应用样式
			由低 到 高
				1、浏览器默认设置
				2、样式表(内外部)
					就近原则 - 后定义者优先
				3、内联方式
		4、!important 原则
			显示调整样式属性优先级

			样式属性:值 !important;
			!important 加在谁的后面，就以谁为主
	3、CSS基础选择器
		1、选择器的作用
			规范了页面中哪些元素能够使用声明好的样式
			为了匹配页面的元素
		2、选择器详解
			1、通用选择器
				作用：可以与页面上的任一元素相匹配
				语法：* { 样式声明}
				ex:
					*{
						font-size:12px;
						color:red;
					}
			2、元素选择器
				作用：设置页面上某种元素的默认样式
				语法：标记{ 样式声明 }
				ex:
					h3{ color:red;}
					div{font-size:12px;}
					section{background:yellow;}
			3、类选择器
				作用：定义页面上某个或某些元素的样式
				特点：通过元素的class属性进行引用的选择器
				语法：
					1、声明
						.类名{ 样式声明 }
						注意：
							1、点 不能省略
							2、类名不能以数字开头
							3、由英文，-,_ 来组成
					2、引用
						<ANY class="类名">

				特殊用法：
					1、分类选择器的定义方式
						将 类选择器 和 元素选择器 结合使用
						语法：元素选择器.类选择器{ }
							ex:
								1、div.text{}
									定义class为text的div元素的样式
								2、span.important{ }
									定义class为important的span元素..
					2、多类选择器的引用方式
						让元素引用多个类选择器
						语法：
							<ANY class="c1 c2 c3">
			4、id选择器
				作用：与ID属性联用，为了设置 指定ID元素的样式(专属定制)
				语法：
					#ID值{ ... }
				练习：
					1、增加一个 div ，id为container
					2、设置 container 的样式为 
						文字大小：36px
						背景：紫色(purple)
						斜体: font-style : italic;
			5、群组选择器
				作用：将多个选择器放在一起进行样式的声明定义
				语法：选择器1,选择器2,选择器3,... { ... }
				ex:
					#container,div.text,.redColor,span{
						color:red;
					}
					等同于 ：
					#container{color:red;}
					div.text{color:red;}
					.redColor{color:red;}
					span{color:red;}
			6、后代选择器
				作用：通过元素的后代关系匹配元素
				语法：选择器1 选择器2{}
				
			7、子代选择器
				作用：通过元素的子代(一层层级)关系匹配元素
				语法：选择器1>选择器2{}
			8、伪类选择器
				作用：匹配元素不同的状态的选择器
				语法：
					所有的伪类都是以 : 作为开始的
					选择器:伪类选择器{ ... }
				1、链接伪类
					1、:link 
						匹配元素尚未被访问时候的状态
						ex:
							a:link{ ... }
					2、:visited
						匹配元素访问过的状态
						ex:
							a:visited{ ... }
				2、动态伪类
					1、:hover
						匹配鼠标悬停在元素上时的效果
					2、:active
						匹配元素被激活时的状态
						超链接,文本框 和 密码框，点击的时候，就是 active
					3、:focus
						匹配元素获取焦点时的状态
						文本框 和 密码框
				练习：
					1、页面增加一个 a 标记，增加以下效果
						1、未被访问时，颜色为 黑色，没有下划线
							text-decoration:none;
						2、鼠标悬停的时候，增加下划线
							text-decoration:underline;
						3、被激活时(点击的一瞬间)，文本为orange色
						4、访问后的时候，颜色变为 绿色(green)
					2、页面增加一个 input 文本框，默认效果颜色为 灰色，字体为斜体(font-style:italic)
						1、被激活时，字体为非斜体
							font-style:normal;
						2、获取焦点时，文本颜色为绿色(green)
3、尺寸 与 边框
	1、单位
		1、尺寸单位
			1、px ：像素
				1980 * 1024
				1024 * 768
			2、in ：英寸
				1in = 2.54cm
			3、pt ：磅 (1pt = 1/72in)
				多数表示文字大小
			4、cm ：厘米
			5、mm ：毫米
			6、em ：
			7、rem ：
			8、%
		2、颜色单位(取值)
			1、rgb(r,g,b);
				r : red 
				g : green
				b : blue

				r,g,b : 取值范围 0-255

				rgb(32,78,125);
							
			2、rgb(r%,g%,b%)	
			3、rgba(r,g,b,alpha)
				alpha : 透明度，0-1之间的小数，越大，不透明度越高
			4、#rrggbb
				由6位十六进制的数字表示一个颜色
				#112233
			5、#rgb
				#rrggbb 的缩写
				#112233 -> #123;
				#1a2233 -> 无缩写
			6、表示颜色的英文单词
				red,green,blue,yellow,... ...
	2、尺寸属性
		1、作用
			改变元素的宽度 和 高度
		2、语法
			1、宽度
				width : 宽度
				min-width : 最小宽度
				max-width : 最大宽度
			2、高度
				height : 高度
				min-height : 最小高度
				max-height : 最大高度
		3、页面中允许设置尺寸的元素
			1、所有的块级元素都允许设置尺寸
				div,p,h1,h2,...,ul,ol,dl,dt,dd, ...
			2、行内块元素允许设置尺寸
				表单控件元素(单选按钮，复选框)
			3、本身具备 width 和 height 的HTML元素
				img , table
			注意：大部分的行内元素是无法修改尺寸的

		4、溢出处理
			当内容多，元素小的时候，就会产生溢出的效果，默认都是纵向溢出
			属性：
				overflow,overflow-x,overflow-y
			取值：
				1、visible
					可见的，默认值，溢出可见
				2、hidden
					隐藏的，溢出的内容全部隐藏，不可见
				3、scroll
					显示滚动条，溢出时，可用
				4、auto
					自动，溢出时才显示滚动条并可用









