1、表单
	1、form ...
	2、input ...
	3、textarea 控件
		标记：<textarea></textarea>
		属性：
			1、name
				定义名称，提交给服务器使用
			2、cols
				指定文本域的列数，变相指定宽
			3、rows
				指定文本域的行数，变相指定高
			4、readonly
				只读
		Demo : 
			创建 01-form.html 文件
			创建一个 多行文本域，列数为 50，行数为 5，名称为 intro
	4、选项框
		1、标记
			<select></select>
			表示 下拉列表 或 滚动列表
			<option></option>
			列表中的内容，允许出现多个
		2、属性
			1、<select>
				1、name ：控件的名称
				2、size ：默认显示选项的数量，默认为1，为下拉列表，如果取值>1的话，则为滚动列表
				3、multiple 
					设置多选，无值的属性
			2、<option>
				1、value ：选项的值，提交给服务器用
				2、selected ：默认被选中
	5、其它标记
		1、label 元素
			作用：关联文本与表单控件的，点击文本时就如同点击表单控件一样
			标记：<label>文本</label>
			属性：
				1、for
					指定要关联的表单控件的ID值
		2、为控件分组
			<fieldset>
				<legend>分组标题</legend>

				分组中的内容
			</fieldset>
		3、浮动框架
			1、作用
				将其他页面导入到当前页面中来
			2、语法
				标记：<iframe></iframe>
				属性：
					1、src
						要引入的页面的url
					2、frameborder
						指定浮动框架的边框，默认为1，则显示边框
						不需要边框则设置为 0
					3、width
					4、height
			练习：
				创建一个 02-iframe 的网页，将 01-form.html 页面引入进来 ，适当调整宽度，高度，边框
	6、新input元素 (HTML5)
		1、电子邮件类型
			作用：提交时会验证数据是否符合Email的规范
			标记：<input type="email">
		2、搜索类型
			作用：在文本框的基础上，提供了快速清除操作
			标记：<input type="search">
		3、URL类型
			作用：提交时会验证数据是否符合Web站点的URL规范(绝对路径)
			标记：<input type="url">
		4、电话号码类型
			作用：在移动端设备中，能展开 拨号键盘，在PC中无效
			标记：<input type="tel">
		5、数字类型
			作用：只能让用户输入 或 选择数字
			标记：<input type="number">
			属性：
				1、min ：当前控件接受的最小值
				2、max ：当前控件接受的最大值
				3、step ：微调数字时每次变化的长度,默认为1
		6、范围类型
			作用：提供一个滑块，让用户选择数字
			标记：<input type="range">
			属性：
				1、min ：当前控件的最小值
				2、max ：当前控件的最大值
				3、value ：设定初始值
		7、颜色类型
			作用：提供一个颜色拾取控件
			语法：<input type="color">
		8、日期类型
			作用：提供一个日期输入控件
			标记：<input type="date">
		9、周类型
			作用：提供一个日期控件，用于选取周
			标记：<input type="week">
		10、月份类型
			作用：选取月份控件
			标记：<input type="month">
=============================
Javascript Basic
1、Javascript 概述(了解)
	Javascript，简称为 JS，是一款能够运行在 JS解释器/引擎 中的脚本语言

	JS解释器/引擎 是JS的运行环境：
		1、独立安装的JS解释器 - NodeJS
		2、嵌入在浏览器中的JS解释器
	
	JS的发展史：
		1、1992年 Nombas 开发了一款语言 ScriptEase
		2、1995年 Netscape(网景) 开发了一款语言 LiveScript,更名为 Javascript
		3、1996年 Microsoft(微软) 开发了一款语言 JScript
		4、1997年 网景 将Javascript 1.1 提供给了ECMA(欧洲计算机制造商联合会),ECMA 获取了 JS 的核心，称之为 ECMA Script (ES)
	完整的JS组成：
		1、核心(ES)
		2、文档对象模型(Document Object Model) - DOM
			 允许让 JS 与 HTML 文档打交道
		3、浏览器对象模型(Browser Object Model) - BOM
			 允许让 JS 与 浏览器进行交互

	JS是一款基于对象的编程语言
2、JS的基础语法
	1、浏览器内核
		内核负责页面内容的渲染，由以下两部分组成：
		1、内容排版引擎 - 解析HTML/CSS
		2、脚本解释引擎 - 解析Javascript
	2、搭建JS运行环境(重点)
		1、独立安装的JS解释器 - NodeJS
			console.log("Hello World");
			console.log('Hello World');
		2、使用浏览器中的内核(JS解释引擎)
			1、在浏览器的控制台(Console)中，输入脚本并执行
			2、将JS脚本代码嵌入在HTML页面中执行
				1、采用HTML元素事件执行JS代码
					事件 ：
						1、onclick
							当元素被点击时执行的操作
							ex: 当按钮被点击时，在控制台中输出 Hello World

							<button type="button" onclick="console.log('Hello World');"></button>

				2、将JS脚本编写在 <script></script> 并嵌入在HTML文档的任何位置
				<script>
					console.log("... ...");
					document.write("<h1>Hello Wolrd</h1>");
				</script>
				3、将JS脚本编写在外部独立的JS脚本文件中(***.js)
					步骤：
						1、编写JS脚本文件
						2、在HTML中引入脚本文件
							<script src=""></script> 
					练习：
						1、先创建一个 base.js 的文件
						2、在文件中执行以下代码
							console.log(" .... ... ");
							document.write(" ... ... ");
							window.alert("这是在外部脚本文件中的内容");
						3、在 html 文档中，引入 base.js 文件
	3、JS调试 
		当代码编写出现错误时，在运行的时候，在错误位置会停止
		碰到错误代码，会终止当前语句块的执行，但不影响后续块的执行
			<script></script> 为一块
	4、JS语法
		1、语句 - 可以被JS引擎执行的最小单元
			由表达式、关键字、运算符 来组成的
			严格区分大小写 ：name 和 Name
			所有的语句都是以 ; 来表示结束
			所有的标点符号都是英文的
				; 和 ；
				. 和 。
				: 和 ：
				" 和 “
				' 和 ‘
				() 和 （）
				[] 和 【】
				{} 和  {}
		2、注释
			单行注释: //
			多行注释: /* */
3、变量 与 常量
	1、变量
		1、什么是变量
			用来存储数据的一个容器
		2、声明变量(重点)
			1、声明变量
				var 变量名;
			2、为变量赋值
				变量名=值;
			3、声明变量并赋初始值
				var 变量名=值;
			注意：
				1、变量在声明时没有赋值的话，那么值为 undefined
				2、声明变量允许不使用var关键字，但并不推荐
			练习：
				1、创建一个网页 04-variable.html
				2、声明一对 <script></script>,并完成以下变量的声明
					1、声明一个变量用于保存用户的姓名，并赋值为 "张三丰";
					2、声明一个变量用于保存用户的年龄，赋值 68
				3、如何 将变量的数据 打印在控制台上？？
			4、一条语句中声明多个变量
				var 变量名1=值,变量名2=值,变量名3;
		3、变量名命名规范
			1、由字母，数字，下划线以及 $ 组成
				var user_name; 正确
				var user-name; 错误
				var $uname; 正确
			2、不能以数字开头
				var 1name;错误
			3、不能使用JS中的关键字 和 保留关键字
			4、变量名不能重复
			5、可以采用"驼峰命名法",小驼峰命名法使用居多
			6、最好见名知意
				var a;
				var uname;
		4、变量的使用
			1、为变量赋值 - SET操作
				只要变量出现在 赋值符号(=)的左边一律是赋值操作
				var uname="张三丰";
				uname="张无忌";
			2、获取变量的值 - GET操作
				只要变量没有出现在赋值符号(=)的左边，一律是取值操作
				var uname="wenhua.li";//赋值操作
				console.log(uname);

				var new_name = uname;
					new_name 是赋值操作
					uname 是取值操作
				
				uname = uname + "bingbing.fan";

				赋值符号出现的话，永远都是将右边的值，赋值给左边的变量(从右向左运算)
	2、常量
		1、什么是常量
			在程序中，一旦声明好，就不允许被修改的数据
		2、声明常量
			const 常量名=值;

			常量名在命名时采用全大写形式

作业：
	1、声明一个变量 r ，来表示一个圆的半径，并赋值
	2、声明一个常量PI ，来表示圆周率3.14
	3、通过 r 和 PI 来计算 该圆的周长，保存在变量l中
		周长 = 2 * π * 半径
	4、通过 r 和 PI 来计算 该圆的面积，保存在变量s中
		面积 = π * r * r;
	5、在控制台中打印输出
		半径为 * 的圆的周长是 *
		半径为 * 的圆的面积是 *








笔记本名称:ThinkPad E460
笔记本价格:3000
笔记本库存:100台


