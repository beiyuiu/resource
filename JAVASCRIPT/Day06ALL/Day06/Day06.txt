var arr1 = [36,78];
var arr2 = arr1;

var num1 = 10;
var num2 = num1;

console.log();
arr.length;

1、练习
	要求用户手动的录入整数数字，并且保存到数组中，输入 exit 为止，并且查找该数组中的最大值是多少
	请输入数字(exit退出):78 
	请输入数字(exit退出):56
	请输入数字(exit退出):126
	请输入数字(exit退出):35
	... ...
	请输入数字(exit退出):exit
	数组为：[78,56,126,35]
	该数组中的最大值为:126

=================================================
1、数组
	1、使用 for ... in 遍历数组元素
		语法：
			for(var 变量 in 数组){
				//变量：表示的是数组中每个元素的下标
			}
	2、关联数组
		php中 ：$array = ["name"=>"sanfeng.zhang"];
		用字符串做下标，就是关联数组
		var array = []; //声明一个空数组
		array["西游记"] = "古代神话故事";
		array["红楼梦"] = ["贾宝玉","林黛玉","刘姥姥"];

		Q : array.length
		注意：
			1、关联数组是不算做数组内容的，不记录到 length 中
			2、关联数组只能通过 字符串 做下标取值
			3、允许通过 for...in 来循环遍历关联数组的字符串下标(也能遍历出内容的数字下标)
	3、冒泡排序
		[23,9,78,6,45] -> [6,9,23,45,78]

		冒泡排序：车轮战，两两比较，小的靠前
		特点：
			1、轮数 ：共比较了 length - 1 轮
			2、每轮中比较的次数 ：随着轮数的增加，次数反而减少

		代码：
			双层循环表示整个排序的过程
			1、外层循环 ：控制比较的轮数，从1开始，到length-1(能取到)结束
			2、内层循环 ：控制每轮中比较的次数，并且也要表示参与比较的元素的下标，从0开始，到 length-1-i(轮数变量)
			
			[23,9,78,6,45]

			共5个元素
			外层：从 1 开始，到 4 结束
			内层：
				第一轮 第一次：从 0 开始 ，到 3 结束
				第二轮 第一次：从 0 开始 ，到 2 结束
				... ...
2、数组的常用方法
	1、toString()
		将一个数组转换为字符串
		语法：var str = 数组对象.toString();
	2、join()
		作用：将数组中的元素通过指定的分隔符连接到一起，并返回连接后的字符串
		语法：var str = 数组对象.join("&");

		练习：(10分钟)
			1、使用数组实现由 * 组成的三角形
				直角三角形，等腰三角形
				*
				**
				***
				****
				*****
			2、使用数组实现 九九乘法表
	3、连接数组
		函数：concat()
		作用：拼接两个或更多的数组，并返回拼接后的结果
		语法：var result=arr1.concat(arr2,arr3,arr4);
		注意：
			1、concat不会改变现有数组，而是返回拼接后的
			2、每个参数不一定非是数组，也可以是普通的数据
		练习：
			1、声明两个全局数组，分别保存一些国家的名称
				数组1：选中的国家
					sel = ["中国","美国","俄罗斯","日本"];
				数组2：备选国家
					unsel=["朝鲜","越南","老挝","柬埔寨"];
			2、将 备选国家 全部移入到 入选国家中，打印数据
				结果：
					sel = ["中国","美国","俄罗斯","日本","朝鲜","越南","老挝","柬埔寨"];
					unsel=[];
	4、获取子数组
		函数：slice()
		作用：从指定数组中，截取几个连续的元素组成的新数组
		语法：arr.slice(start,[end]);
			start:从哪个下标处开始截取，取值为正，从前向后取，取值为负，从后向前算位置。
			           0      1      2      3
			var arr=["中国","美国","日本","英国"];
			          -4     -3     -2     -1
			end : 指定结束处的下标(不包含)，该参数可以省略，如果省略的话，就是从start一直截取到结束
		注意：
			1、该函数不会影响现有数组，会返回全新的数组
		练习：
			var arr=["中国","美国","日本","英国"];
			取出 美国 和 日本 组成的一个子数组
	5、修改数组
		函数：splice()
		作用：允许从指定数组中，删除一部分元素，同时再添加另一部分元素
		语法：
			arr.splice(start,count,e1,e2,... ...);
				start:指定添加或删除元素的起始位置/下标
				count:要删除的元素个数，取值为0表示不删除
				e1,e2,... ... : 要增加的新元素，允许多个

			返回值：返回一个由删除元素所组成的数组
		注意：splice 会改变现有数组
		练习：
			在 sel 和 unsel 的基础上完成下列操作
			1、从备选国家中(unsel)，选择一个国家移入到 选中的国家(sel)
				推荐步骤：
					1、用户输入 ：越南
						从 unsel 中将越南移除
						再将 越南 sel 的末尾处
					2、用户输入 ：墨西哥
						提示：国家不存在
	6、数组的反转
		作用：颠倒数组中元素的顺序
		语法：arr.reverse();
		注意：该函数会改变当前数组的内容
		练习：
			1、声明一个整数数组
			2、倒序打印输出内容(使用reverse())
	7、数组排序
		函数：sort();
		语法：arr.sort(排序函数);
		作用：默认情况下，按照元素的Unicode码大小按升序排列

		特殊：允许自己指定排序函数，从而实现对数字的升序和降序的排列
			语法：arr.sort(排序函数);
			ex:
				var arr = [12,6,4,72,115,89];
				//排序函数(升序)
				function sortAsc(a,b){
					return a-b;
				}
				arr.sort(sortAsc);
				原理：
					1、指定排序函数 如 sortAsc,定义 两个参数，如 a 和 b。数组会自动传递数据到 sortAsc 里面去，如果返回值是>0的数，则交换两个数的位置，否则不变
		使用匿名函数完成排序：
			arr.sort(function(a,b){return a-b;});
		练习：
			1、声明一个整数数组，随意定义数字
			2、页面上添加两个按钮，一个"升序"按钮，一个"降序"按钮
			3、点击 升序 按钮时，数组按升序排序，并打印
			4、点击 降序 按钮时，数组按降序排序，并打印
	8、进出栈操作
		JS是按照标准的"栈式操作"访问数组的
		所有的"栈式操作"的特点都是"后进先出"
		"栈式操作"讲究的"入栈"和"出栈"
		1、push()
			入栈，在栈顶(数组的尾部)添加指定的元素，并返回新数组的长度
			var arr = [10,20,30];
			//向栈顶增加新数据 40
			var len = arr.push(40);
			//len 保存的是 40 入栈后 arr 的长度，值是4
		2、pop()
			出栈，删除并返回栈顶的(数组尾部)元素
			var arr = [10,20,30];
			var r1 = arr.pop();//arr = [10,20]
			var r2 = arr.pop();//arr = [10]
			==============================
			arr :
			r1 : 30
			r2 : 20
		3、shift()
			删除数组头部的(第一个)元素并返回
			var arr = [10,20,30];
			var r1 = arr.shift();
			============================
			arr : [20,30]
			r1 : 10
		4、unshift()
			作用：在数组的头部(第一个)元素位置处，增加新元素
			var arr = [10,20,30];
			arr.unshift(40);
			arr : [40,10,20,30]
3、二维数组
	1、什么是二维数组
		一个数组中的元素又是一个数组，也可以称之为：数组的数组
	2、创建二维数组
		var names=[
			["孙悟空","猪八戒","沙悟净"],
			["潘金莲","西门庆","武大郎"],
			["贾宝玉","刘姥姥","林黛玉"],
			["貂蝉","貂蝉","貂蝉"]
		];
		
		//获取猪八戒
		console.log(names[0][1]);
		//获取林黛玉
		console.log(names[2][2]);

4、作业
	1、通过 进出栈 操作，完成 十进制对二进制的转换
		1、创建一个函数 decode2bin,接收一个十进制的数字做参数
		2、函数体中，将参数 拆成二进制数字，保存在一个数组中
		3、将数组的元素使用""连接，并返回

		十进制 转 二进制 ：除2取余法
		num : 5
		num % 2 : 结果为 1
		num = parseInt(num / 2) : 结果 2
		num % 2 : 结果为 0
		num = parseInt(num / 2) : 结果 1
		num % 2 : 结果为 1
		num = parseInt(num / 2) : 结果 0

		结果为 0 时则不用再继续 %2
	2、根据省份信息，查询城市列表
		1、创建一个全局数组，保存几个省份名称
		2、创建一个全局二维数组，保存不同省份中的城市信息(数据要与省份数组中的数据对应的上)
		3、创建一个函数，接收一个省份名称做参数，打印该省份中对应的所有的城市信息
