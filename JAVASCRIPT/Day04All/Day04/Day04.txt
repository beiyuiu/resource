function test(){
	console.log("Hello World");
}

var result = test();
console.log(result);
===========================
输出结果：
	Hello World
	undefined



<script>
	var g_uname = "sanfeng.zhang";

	function showName(){
		var uname = "wuji.zhang";
		console.log(uname);//wuji.zhang
	}
</script>




function test(){
	console.log(num); // 打印 ：undefined
	var num = 15;
}
演变成：
function test{
	var num; // 先声明，但不赋值(自动完成)
	console.log(num); // 打印 ：undefined
	num=15;// 只赋值，不声明
}
推荐写法：
function test(){
	var num = 15;
	console.log(num); // 打印 ：15
}
***********************************************
作业：
	1,1,2,3,5,8,13,21,34,55,... ...
	已知：
		该数列中前两个数都是 1
		从第三个数开始，每个数字等于前两个数的和
	/*通过 f 函数，计算第 n 个数字是多少*/
	function f(n){
	
	}

	f(5) : 求第五个数字是多少
=================================================
1、分支(选择)结构
	1、流程控制结构
		1、顺序结构 - 自顶向下的执行
		2、分支结构 - 有条件的选择某一段代码去执行
		3、循环结构 - 有条件的选择某一段代码反复执行

		程序 = 数据结构 + 算法
	2、练习
		编写一个收银柜台收款程序，根据商品单价，购买数量以及收款金额计算并输出应收金额和找零
			
		数据：商品单价，购买数量，收款金额，应收金额，找零

		输入数据：商品单价(price),购买数量(count),收款金额(money)
		输出数据：应收金额(total),找零(change)

		Q : 当商品总价>=500时，享受8折优惠

	3、if 结构
		语法：
			if(条件){
				满足条件要执行的语句块
			}

			流程：
				1、判断条件
				2、如果条件为真，则执行 语句块 中的内容
				3、如果条件为假，则跳过语句块去执行其他内容
		注意：
			1、if中的条件，最好是一个boolean的值，如果不是boolean类型，则会自动转换
				以下情况，条件会自动转换为 false
				if(0)
				if(0.0)
				if(undefined)
				if(null)
				if("")
				if(NaN)

				if(35.5){ //真 }
				
				var num;
				if(num){ //假 }

				if("李文华真帅"){ //真 }
			2、if 后的 { } 是可以被省略的，如果省略的话，只控制 if 下的第一条语句
		问题：考虑异常情况，如果收款金额小于应收金额
			如果 收款金额大于等于应收金额，则正常执行
			否则 则给出异常提示
	4、if ... else ... 结构
		语法：
			if(条件){
				满足条件时，执行的语句块
			}else{
				不满足条件时，执行的语句块
			}
		练习：
			1、从弹框中，输入一个年份信息
			2、判断该年是否为闰年，并给出提示
				输入年：2009
				2009年不是闰年

				输入年：2012
				2012年是闰年
	5、if ... else if ...  结构
		语法：
			if(条件1){
				//满足条件1时，要执行的语句块
			}else if(条件2){
				//满足条件2时，要执行的语句块
			}else if(条件n){
				//满足条件n时，要执行的语句块
			}else{
				//以上条件都不满足时，要执行的语句块
			}
		练习：
			从弹框中，分三次录入 年，月，日
			判断该日是该年的第多少天
			提示：
				1,3,5,7,8,10,12 ：每月31天
				4,6,9,11 ：每月30天
				2 ：闰年29天，平年28天
			
			2017年8月21日 ：
				31+29+31+30+31+30+31+21
	6、switch ... case
		Q :
			从弹框中录入 1-7 中的任一一个数字
			录入 1 ：输出 ：今天吃红烧肉
			录入 2 ：输出 ：今天吃红烧排骨
			录入 3 ：输出 ：今天吃红烧丸子
			录入 4 ：输出 ：今天红烧鱼
			录入 5 ：输出 ：今天吃烤羊腿
			录入 6 ：输出 ：今天休息
			录入 7 ：输出 ：今天休息
		场合：等值判断
		语法：
			switch(变量){
				case 常量值1:
					语句块1;
					break;//通过 break 结束switch的执行(可选 )
				case 常量值2:
					语句块2;
					break;//可选
				default:
					语句块n;
					break;//可选
			}
		练习：
			1、使用 特殊的 switch 结构完成下列要求
				输入年 ，月
				输出 该月有多少天

				1,3,5,7,8,10,12 : 31天
				4,6,9,11 : 30 天
				2 : 平年28天，闰年29天

				ex:
					年：2017
					月：5
					输出：31天
			1、使用 特殊的 switch 结构完成下列要求
			2、改版日期计算器(难度)
				输入年月日，判断该日是这一年的多少天
					var month = Number(prompt());
					var totalDays = 0;

					switch(month-1){
						case 11:
							totalDays += 30;
						case 10:
							totalDays += 31;
						case 9:
							totalDays += 30;
						
						... ...
					}
2、循环结构
	1、问题
		1、控制台上打印一句Hello World
		2、控制台上打印十句Hello World
		3、控制台上打印10000句 Hello World
		4、改版第3步，增加
			第 ? 句 Hello World
			第 1 句 Hello World
			第 2 句 Hello World
			...
			第 10000 句 Hello World
		5、改版第4步
			将 Hello Word 替换成 "你好 世界"
		练习：
		6、打印输出 1-100之间所有数字的和
	2、什么是循环结构
		循环，就是一遍又一遍的执行相同或相似的代码
		两个重要的要素：
			1、循环条件 ：循环执行的次数
			2、循环操作 ：循环体，要执行相同 或 相似的代码是什么
	3、while 循环
		1、语法
			while(条件){
				//循环操作
			}
			流程：
				1、判断条件
				2、如果条件为真，则执行循环操作，然后再次判断条件。当条件为假时，则退出循环结构
	4、循环的流程控制语句
		1、break
			破坏了整个循环的执行 - 结束循环
		2、continue
			结束本次循环，继续执行下次循环
		
		练习：
			1、使用 continue ，打印输出 1-100之间所有偶数的和
			2、让用户循环从弹框录入信息，并将信息打印在控制台上，直到用户输入 exit 为止
				输入数据：sanfeng.zhang
				sanfeng.zhang
				输入数据：wuji.zhang
				wuji.zhang
				输入数据：exit
			3、猜数字游戏
				1、随机生成一个 1-100 之间的数字
					Math.random() 返回 0-1 之间的小数
					var r = parseInt(Math.random()*100)+1;
				2、要求用户输入一个整数
					若比生成的随机数大，则输出 “猜大了”
					若比生成的随机数小，则输出 “猜小了”
					直到用户 猜对为止
				3、如果用户输入exit ,也可以退出游戏
3、作业 
	用户从弹框中输入年，月，日，判断该日是星期几?
	1900年1月1日 是星期1
	推荐思路：
		从1900年1月1日 到 输入的年月日 共有多少天求出来，与 7 取余 
		1、通过一个循环计算从1900年 到输入年前一年有多少天?
		2、再从1月，到输入月份的前一个月共有多少天?
		3、再累加 输入的日
		4、用整体结果 与7取余，给出提示
	附加作业：
		将 输入的月份的日历打印输出
		2017年8月
		日  一  二  三  四  五  六
            1   2   3   4   5
		6   7   8   9   10  11  12
		13  14  15  16  17  18  19
		20  21  22  23  24  25  26
		27  28  29  30  31
		











